{"version":3,"file":"static/js/544.44d5d718.chunk.js","mappings":"kOAIA,MAAMA,EAAwBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAMlCC,EAAmBJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iCAI5BI,EAAoBP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0FAgBpC,EATqBO,KAEjBC,EAAAA,EAAAA,MAACZ,EAAqB,CAAAa,SAAA,EACpBC,EAAAA,EAAAA,KAACT,EAAgB,CAAAQ,SAAC,0BAClBC,EAAAA,EAAAA,KAACN,EAAiB,CAACO,IAAKN,EAAKO,IAAI,Y,sHCdvC,MAwDA,EAxDuBC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,UAAUH,gBAClEI,GAAyBH,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,UAAUC,yBAC3EC,GAAeJ,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,UAAUE,gBAGvEC,EAAAA,EAAAA,YAAU,KACHD,GAAcP,GAASS,EAAAA,EAAAA,IAAgBF,GAAc,GAEzD,CAACA,IAGJ,MAkBMG,EAlBeC,KACjB,MAAMD,EAAQC,EAAUC,KAAIC,IAAkC,IAAjC,GAACC,EAAE,MAAEC,EAAK,OAAEC,GAAeH,EACpD,OACIjB,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,GAAE,UAAAC,OAAYL,GAAKnB,UACrBD,EAAAA,EAAAA,MAAA,MAAI0B,UAAU,kBAAiBzB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKmB,EAAQlB,IAAKiB,KACvBnB,EAAAA,EAAAA,KAAA,OAAKwB,UAAU,kBAAiBzB,SAAEoB,QAHXD,EAKxB,IAGf,OACIlB,EAAAA,EAAAA,KAAA,MAAIwB,UAAU,kBAAiBzB,SAC1Be,GACA,EAICW,CAAYnB,GAE1B,OAAKK,EAAae,OAQY,YAA3BhB,GACQV,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,IACoB,UAA3BjB,GACDV,EAAAA,EAAAA,KAACH,EAAAA,EAAY,KAIpBG,EAAAA,EAAAA,KAAA,OAAKwB,UAAU,kBAAiBzB,SAC3Be,KAdDd,EAAAA,EAAAA,KAAA,OAAKwB,UAAU,mBAAkBzB,UAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCAcN,C","sources":["components/errorMessage/ErrorMessage.tsx","components/pages/FavouritesPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport img from './error.gif';\n\nconst ErrorMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ErrorMessageText = styled.h2`\n  text-align: center;\n`;\n\nconst ErrorMessageImage = styled.img`\n  display: block;\n  height: 400px;\n  object-fit: contain;\n  margin: 0 auto;\n`;\n\nconst ErrorMessage = () => {\n  return (\n    <ErrorMessageContainer>\n      <ErrorMessageText>Something went wrong</ErrorMessageText>\n      <ErrorMessageImage src={img} alt=\"error\"/>\n    </ErrorMessageContainer>\n  )\n}\n\nexport default ErrorMessage;\n","import { Link } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../../store/index.tsx';\nimport Spinner from '../spinner/Spinner.tsx';\nimport { fetchFavourites } from '../../store/favouriteSlice.ts';\nimport ErrorMessage from '../errorMessage/ErrorMessage.tsx';\n\nimport './favouritesPage.scss';\nimport { IMovie, IMovieList } from '../../types/movie.ts';\n\nconst FavouritesPage = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    \n    const favouriteList = useSelector((state: RootState) => state.favourite.favouriteList)\n    const favouriteLoadingStatus = useSelector((state: RootState) => state.favourite.favouriteLoadingStatus)\n    const favouriteIds = useSelector((state: RootState) => state.favourite.favouriteIds)\n\n\n    useEffect(() => {\n        if(favouriteIds) dispatch(fetchFavourites(favouriteIds))\n        //eslint-disable-next-line\n    }, [favouriteIds])\n\n\n    const renderItems = (movieList: IMovieList) => {\n        const items = movieList.map(({id, title, poster}: IMovie) => {\n            return (\n                <Link to={`/movie/${id}`} key={id}>\n                    <li className=\"favourite__item\">\n                        <img src={poster} alt={title}/>\n                        <div className=\"favourite__name\">{title}</div>\n                    </li>\n                </Link>\n            )\n        })\n        return (\n            <ul className=\"favourite__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(favouriteList)\n\n    if (!favouriteIds.length) {\n        return (\n            <div className=\"favourite__empty\">\n                <h1>Please add movie to favourites</h1>\n            </div>\n        )\n    }\n\n    if(favouriteLoadingStatus === 'loading') {\n        return <Spinner/>\n      } else if(favouriteLoadingStatus === 'error'){\n        return <ErrorMessage/>\n      }\n\n    return (\n        <div className=\"favourite__list\">\n            {items}\n        </div>\n    )\n\n}\n\nexport default FavouritesPage;"],"names":["ErrorMessageContainer","styled","div","_templateObject","_taggedTemplateLiteral","ErrorMessageText","h2","_templateObject2","ErrorMessageImage","img","_templateObject3","ErrorMessage","_jsxs","children","_jsx","src","alt","FavouritesPage","dispatch","useDispatch","favouriteList","useSelector","state","favourite","favouriteLoadingStatus","favouriteIds","useEffect","fetchFavourites","items","movieList","map","_ref","id","title","poster","Link","to","concat","className","renderItems","length","Spinner"],"sourceRoot":""}