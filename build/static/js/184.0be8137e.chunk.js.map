{"version":3,"file":"static/js/184.0be8137e.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.tsx","components/pages/SingleMoviePage.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport img from './error.gif';\n\nconst ErrorMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ErrorMessageText = styled.h2`\n  text-align: center;\n`;\n\nconst ErrorMessageImage = styled.img`\n  display: block;\n  height: 400px;\n  object-fit: contain;\n  margin: 0 auto;\n`;\n\nconst ErrorMessage = () => {\n  return (\n    <ErrorMessageContainer>\n      <ErrorMessageText>Something went wrong</ErrorMessageText>\n      <ErrorMessageImage src={img} alt=\"error\"/>\n    </ErrorMessageContainer>\n  )\n}\n\nexport default ErrorMessage;\n","import { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../../store/index.ts';\n\nimport { fetchMovie } from '../../store/movieSlice.ts';\nimport { makeFavourite, removeFavourite } from '../../store/favouriteSlice.ts';\nimport Spinner from '../spinner/Spinner.tsx';\nimport ErrorMessage from '../errorMessage/ErrorMessage.tsx';\n\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\n\nimport './singleMoviePage.scss';\n\nconst SingleMovieLayout = () => {\n  const { id } = useParams();\n\n  const movie = useSelector((state: RootState) => state.movie.movie)\n  const favouriteIds = useSelector((state: RootState) => state.favourite.favouriteIds)\n  const movieLoadingStatus = useSelector((state: RootState) => state.movie.movieLoadingStatus)\n\n  const [isFavourite, setIsFavourite] = useState(false)\n  \n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(fetchMovie(id ?? \"\"))\n    //eslint-disable-next-line\n  }, [id])\n\n  useEffect(() => {\n    setIsFavourite(favouriteIds.includes(id ?? \"\"))\n    //eslint-disable-next-line\n  }, [favouriteIds])\n\n  const onStar = () => {\n    if(!isFavourite) {\n      dispatch(makeFavourite(id ?? \"\"))\n    } else {\n      dispatch(removeFavourite(id ?? \"\"))\n    }\n  }\n\n  if(movieLoadingStatus === 'loading') {\n    return <Spinner/>\n  } else if(movieLoadingStatus === 'error'){\n    return <ErrorMessage/>\n  }\n\n  return movie ? <View data={movie} onStar={onStar} isFavourite={isFavourite} /> : null\n}\n\nconst View = ({data, onStar, isFavourite}) => {\n  const {title, poster, year, actors, country, genre, imdbRating, imdbVotes, plot, writer} = data;\n  const starOptions = { color: '#F5C518', fontSize: '30px' };\n  return (\n    <>\n      <Link to=\"/\" className=\"single-movie__back\">&#60; Back to all</Link>\n\n      <div className=\"single-movie\">\n        <Helmet>\n            <meta\n                name=\"description\"\n                content={`${title} info`}\n            />\n            <title>{title}</title>\n        </Helmet>\n        <img src={poster} alt={title} className=\"single-movie__img\"/>\n        <div className=\"single-movie__info\">\n          <h1 className=\"single-movie__name\">{title}</h1>\n          <p className=\"single-movie__text\">{plot}</p>\n          <p className=\"single-movie__text\"><span>IMDb RATING:</span> {imdbRating}/10 ({imdbVotes})</p>\n          <p className=\"single-movie__text\"><span>Year:</span> {year}</p>\n          <p className=\"single-movie__text\"><span>Actors:</span> {actors}</p>\n          <p className=\"single-movie__text\"><span>Country:</span> {country}</p>\n          <p className=\"single-movie__text\"><span>Genre:</span> {genre}</p>\n          <p className=\"single-movie__text\"><span>Writer:</span> {writer}</p>\n        </div>\n        <div className='single-movie__actions'>\n          <button className='single-movie__actions-star' onClick={onStar}>\n            {isFavourite ? <StarIcon sx={starOptions}/> : <StarBorderIcon sx={starOptions}/>}\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SingleMovieLayout;"],"names":["ErrorMessageContainer","styled","div","_templateObject","_taggedTemplateLiteral","ErrorMessageText","h2","_templateObject2","ErrorMessageImage","img","_templateObject3","ErrorMessage","_jsxs","children","_jsx","src","alt","View","_ref","data","onStar","isFavourite","title","poster","year","actors","country","genre","imdbRating","imdbVotes","plot","writer","starOptions","color","fontSize","_Fragment","Link","to","className","Helmet","name","content","concat","onClick","StarIcon","sx","StarBorderIcon","SingleMovieLayout","id","useParams","movie","useSelector","state","favouriteIds","favourite","movieLoadingStatus","setIsFavourite","useState","dispatch","useDispatch","useEffect","fetchMovie","includes","Spinner","removeFavourite","makeFavourite"],"sourceRoot":""}